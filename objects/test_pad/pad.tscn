[gd_scene load_steps=11 format=2]

[ext_resource path="res://objects/test_pad/ocisly.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeTexture" id=2]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "uv"

[sub_resource type="VisualShaderNodeVec3Uniform" id=4]
uniform_name = "TransformTexture"

[sub_resource type="VisualShaderNodeVectorOp" id=5]

[sub_resource type="VisualShaderNodeVec3Uniform" id=6]
uniform_name = "Size"

[sub_resource type="VisualShaderNodeVectorOp" id=7]
operator = 2

[sub_resource type="VisualShader" id=8]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform vec3 TransformTexture;
uniform vec3 Size;
uniform sampler2D tex_frg_2;



void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// VectorUniform:4
	vec3 n_out4p0 = TransformTexture;

// VectorOp:5
	vec3 n_out5p0 = n_out3p0 + n_out4p0;

// VectorUniform:6
	vec3 n_out6p0 = Size;

// VectorOp:7
	vec3 n_out7p0 = n_out5p0 * n_out6p0;

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out7p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Output:0
	ALBEDO = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -446, 171 )
nodes/fragment/0/position = Vector2( 560, 160 )
nodes/fragment/2/node = SubResource( 2 )
nodes/fragment/2/position = Vector2( 220, 180 )
nodes/fragment/3/node = SubResource( 3 )
nodes/fragment/3/position = Vector2( -280, 160 )
nodes/fragment/4/node = SubResource( 4 )
nodes/fragment/4/position = Vector2( -280, 300 )
nodes/fragment/5/node = SubResource( 5 )
nodes/fragment/5/position = Vector2( -80, 200 )
nodes/fragment/6/node = SubResource( 6 )
nodes/fragment/6/position = Vector2( -260, 380 )
nodes/fragment/7/node = SubResource( 7 )
nodes/fragment/7/position = Vector2( -20, 340 )
nodes/fragment/connections = PoolIntArray( 3, 0, 5, 0, 4, 0, 5, 1, 5, 0, 7, 0, 6, 0, 7, 1, 7, 0, 2, 0, 2, 0, 0, 0 )

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 8 )
shader_param/TransformTexture = Vector3( 2.503, 2.066, 1 )
shader_param/Size = Vector3( 1.5, 1.601, 1 )

[sub_resource type="CubeMesh" id=1]
material = SubResource( 9 )
size = Vector3( 2, 0.109, 2 )

[node name="Spatial" type="Spatial"]

[node name="MeshInstance" type="MeshInstance" parent="."]
mesh = SubResource( 1 )
material/0 = null
